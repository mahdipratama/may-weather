html {
  box-sizing: border-box;
  font-size: 100%;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

:root {
  --primary: #3da5fd;
  --on-primary: #100e17;
  --background: #142430;
  --surface: #152c39;
  --color-main: #eae6f2;
  --color-1: #637989;
  --color-2: #b9b6bf;
  --white: hsl(0, 0%, 100%);
  --white-alpha-4: hsla(0, 0%, 100%, 0.04);
  --white-alpha-6: hsla(0, 0%, 100%, 0.226);
  --white-alpha-8: hsla(0, 0%, 100%, 0.08);
  --black-alpha-10: hsla(0, 0%, 0%, 0.1);
}

:root {
  --ff-epilogue: "Epilogue", sans-serif;
}

:root {
  --shadow-1: 0px 1px 3px hsla(0, 0%, 0%, 0.5);
  --shadow-2: 0px 3px 6px hsla(0, 0%, 0%, 0.4);
  --radius-28: 28px;
  --radius-16: 16px;
  --radius-pill: 500px;
  --radius-circle: 50%;
}

body {
  background-color: var(--background);
  color: var(--color-main);
  font-family: var(--ff-epilogue);
  font-size: 1rem;
  /* overflow: hidden; */
}

:focus-visible {
  outline: 2px solid white;
  outline-offset: 2px;
}

button {
  cursor: pointer;
}

input,
button {
  width: 100%;
  background: none;
  border: none;
  color: inherit;
  font: inherit;
}

input {
  width: 100%;
}

:root {
  --fz-title-1: 2rem;
  --fz-title-2: 1.8rem;
  --fz-title-3: 1.6rem;
  --fz-body-1: 2.2rem;
  --fz-body-2: 2rem;
  --fz-body-3: 1.6rem;
  --fz-label-1: 1.4rem;
  --fz-label-2: 1.2rem;
}

h1,
h2,
h3 {
  font-weight: 700;
  line-height: 1.1;
  margin-top: 0;
}

p {
  margin: 0;
}

a,
a:visited,
a:active {
  text-decoration: none;
  color: inherit;
}

ul {
  margin: 0;
  padding: 0;
}

li {
  list-style: none;
}

sub {
  vertical-align: baseline;
}

sup {
  vertical-align: top;
}

sub,
sup {
  font-size: 0.75em;
}

.container {
  max-width: 1600px;
  width: 100%;
  margin-inline: auto;
  padding: 16px;
}

.icon-btn {
  background-color: var(--white-alpha-8);
  width: 48px;
  height: 48px;
  display: grid;
  place-items: center;
  border-radius: var(--radius-circle);
  border: none;
}

.icon-btn:hover {
  background-color: var(--white-alpha-6);
}

.btn-primary {
  background-color: var(--primary);
  color: var(--on-primary);
  width: 48px;
  height: 48px;
  display: grid;
  place-items: center;
  border-radius: var(--radius-circle);
  border: none;
}

.btn-primary:hover {
  background-color: rgba(61, 163, 253, 0.7411764706);
}

.btn-primary[disabled] {
  background-color: rgba(72, 96, 117, 0.7411764706);
  cursor: not-allowed;
}

.card {
  background-color: var(--surface);
  color: var(--color-main);
}

.card-lg {
  border-radius: var(--radius-28);
  padding: 20px;
}

.card-sm {
  border-radius: var(--radius-16);
  padding: 16px;
}

.title-1 {
  font-size: var(--fz-title-1);
}

.title-2 {
  font-size: var(--fz-title-2);
  margin-bottom: 0.75rem;
}

.title-3 {
  font-size: var(--fz-title-1);
}

.body-1 {
  font-size: var(--fz-body-1);
}

.body-2 {
  font-size: var(--fz-body-2);
  font-weight: 500;
}

.body-3 {
  font-size: var(--fz-body-3);
}

.label-1 {
  font-size: var(--fz-label-1);
}

.label-2 {
  font-size: 12px;
}

.fade-in {
  animation: fade-in 250ms ease forwards;
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.header .container {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.header .container .logo {
  width: 9.375rem;
}
.header .container .search-view {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  height: 100svh; /*for Mobile browser*/
  background-color: var(--surface);
  color: var(--color-main);
  opacity: 0;
  visibility: hidden;
  z-index: 4;
}
.header .container .search-view.active {
  opacity: 1;
  visibility: visible;
}
.header .container .search-view .search-wrapper {
  position: relative;
  border-bottom: 1px solid var(--color-2);
}
.header .container .search-view .search-wrapper::before {
  content: "";
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 1rem;
  width: 1.5rem;
  height: 1.5rem;
  border: 3px solid var(--color-2);
  border-top-color: transparent;
  border-radius: var(--radius-circle);
  animation: loading 500ms linear infinite;
  display: none;
}
.header .container .search-view .search-wrapper:has(.searching)::before {
  display: block;
}
.header .container .search-view .search-wrapper .search-field {
  height: 5rem;
  line-height: 5rem;
  padding-inline: 51px 1rem;
  outline: none;
}
.header .container .search-view .search-wrapper .search-field::placeholder {
  font-size: 1rem;
  color: var(--color-2);
}
.header .container .search-view .search-wrapper .search-field::-webkit-search-cancel-button {
  display: none;
}
.header .container .search-view .search-wrapper .leading-icon {
  position: absolute;
  top: 50%;
  left: 24px;
  transform: translate(-50%, -50%);
}
.header .container .search-view .search-wrapper > .m-icon {
  display: none;
}
.header .container .search-view .search-wrapper .icon-btn {
  background-color: transparent;
  box-shadow: none;
}
.header .container .search-view .search-wrapper .icon-btn:hover {
  background-color: var(--white-alpha-8);
}
.header .container .search-view .search-result .view-list {
  padding-block: 0.5rem 1rem;
}
.header .container .search-view .search-result .view-list .view-item {
  position: relative;
  height: 56px;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: 1rem;
  padding-inline: 1rem 1.5rem;
}
.header .container .search-view .search-result .view-list .view-item :hover {
  background-color: var(--white-alpha-8);
}
.header .container .search-view .search-result .view-list .view-item :is(.m-icon, .item-subtitle) {
  color: var(--color-1);
}
.header .container .search-view .search-result .view-list .view-item .item-title {
  margin-bottom: 3px;
}
.header .container .search-view .search-result .view-list .view-item .item-link {
  position: absolute;
  inset: 0;
  box-shadow: none;
}
.header .container .header-actions {
  display: flex;
  align-items: center;
  gap: 1rem;
}
.header .container .header-actions .icon-btn .icon {
  padding-top: 0.1875rem;
}
.header .container .header-actions .btn-primary .span {
  display: none;
}

@keyframes loading {
  0% {
    transform: translateY(-50%) rotate(0);
  }
  100% {
    transform: translateY(-50%) rotate(1turn);
  }
}